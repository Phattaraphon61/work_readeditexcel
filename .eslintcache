[{"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\index.js":"1","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\App.js":"2","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\reportWebVitals.js":"3","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\components\\excelPage.js":"4","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\utils\\editable.js":"5","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\components\\login.js":"6"},{"size":1216,"mtime":1618578572036,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":1618470410934,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1618470410934,"results":"11","hashOfConfig":"10"},{"size":12539,"mtime":1618575038970,"results":"12","hashOfConfig":"8"},{"size":2034,"mtime":1618340067703,"results":"13","hashOfConfig":"8"},{"size":19933,"mtime":1618579111420,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"nluw39",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e5ufvf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\index.js",["32","33","34","35"],"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { useRoutes, BrowserRouter } from \"react-router-dom\";\nimport ExcelPage from \"./components/excelPage\";\nimport LoginDemo from \"./components/login\"\n\n\nfunction App() {\n\n\n  return(\n    <LoginDemo/>\n  )\n  // const routes = [\n  //   {\n  //     path: \"/\",\n  //     element: <LoginDemo />,\n  //   },\n  //   {\n  //     path: \"home\",\n  //     element: <ExcelPage />,\n  //   }\n  // ];\n\n  // const routing = useRoutes(routes);\n  // return <div>{routing}</div>;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById(\"root\"))\n",["36","37"],"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\App.js",[],"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\reportWebVitals.js",[],"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\components\\excelPage.js",["38","39","40","41","42","43","44"],"import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload, Typography, Space, message } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { EditableFormRow, EditableCell } from \"../utils/editable\";\nimport ExportJsonExcel from 'js-export-excel';\nconst { Text } = Typography;\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      name: null,\n      errorMessage: null,\n      columns: [\n        {\n          title: \"ICD-10\",\n          dataIndex: \"ICD_10\",\n          editable: true,\n          render: text => text\n        },\n        {\n          title: \"ICD-9\",\n          dataIndex: \"ICD_9\",\n          editable: true\n        },\n        {\n          title: \"รหัสกรมบัญชีกลาง.\",\n          dataIndex: \"g1\",\n          editable: true\n        },\n        {\n          title: \"อุปกรณ์\",\n          dataIndex: \"g2\",\n          editable: true\n        },\n        {\n          title: \"อัตราจ่าย\",\n          dataIndex: \"g3\",\n          editable: true\n        },\n        // {\n        //   title: \"Action\",\n        //   dataIndex: \"action\",\n        //   render: (text, record) =>\n        //     this.state.rows.length >= 1 ? (\n        //       <Popconfirm\n        //         title=\"Sure to delete?\"\n        //         onConfirm={() => this.handleDelete(record.key)}\n        //       >\n        //         <Icon\n        //           type=\"delete\"\n        //           theme=\"filled\"\n        //           style={{ color: \"red\", fontSize: \"20px\" }}\n        //         />\n        //       </Popconfirm>\n        //     ) : null\n        // }\n      ]\n    };\n  }\n\n  error = () => {\n    message.error('ข้อมูลยังไม่ครบ');\n  };\n\n  handleSave = row => {\n    var dict = {\n      '2505': \"เครื่องละ 9,000 บาท\",\n      '2507': 'ข้างละ 12,000 บาท',\n      '2508': 'ข้างละ 12,500 บาท',\n      '8101': 'ข้างละ 36,500 บาท',\n      '8105': 'ข้างละ 48,000 บาท',\n      '8106': 'ข้างละ 38,000 บาท',\n      '8202': 'ข้างละ 6,000 บาท',\n      '8203': 'ข้างละ 12,000 บาท',\n      '8206': 'ข้างละ 28,000 บาท',\n      '8801': 'คู่ละ 800 บาท',\n      '8802': 'คู่ละ 1,000 บาท',\n      '8803': 'คู่ละ 1,200 บาท',\n      '8804': 'คู่ละ 1,400 บาท',\n      '2006': 'อันละ 2,800 บาท',\n      '2007': 'อันละ 700 บาท',\n      '8201': 'ข้างละ 11,000 บาท',\n      '8221': 'ข้างละ 6,000 บาท',\n      '8205': 'ข้างละ 26,000 บาท',\n    };\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    // console.log(item.includes(undefined))\n    this.setState({ rows: newData });\n    if (newData[index]['ICD_10'] && newData[index]['ICD_9'] && newData[index]['g1'] && newData[index]['g2'] !== undefined) {\n      let temporaryarray = newData.slice();\n      temporaryarray[index]['g3'] = dict[newData[index]['g1']];\n      this.setState(temporaryarray);\n    }\n  };\n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  fileHandler = fileList => {\n    // console.log(\"fileList\", fileList);\n    this.setState({ name: fileList.name.split(\".\")[0] });\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        var dict = {\n          '2505': \"เครื่องละ 9,000 บาท\",\n          '2507': 'ข้างละ 12,000 บาท',\n          '2508': 'ข้างละ 12,500 บาท',\n          '8101': 'ข้างละ 36,500 บาท',\n          '8105': 'ข้างละ 48,000 บาท',\n          '8106': 'ข้างละ 38,000 บาท',\n          '8202': 'ข้างละ 6,000 บาท',\n          '8203': 'ข้างละ 12,000 บาท',\n          '8206': 'ข้างละ 28,000 บาท',\n          '8801': 'คู่ละ 800 บาท',\n          '8802': 'คู่ละ 1,000 บาท',\n          '8803': 'คู่ละ 1,200 บาท',\n          '8804': 'คู่ละ 1,400 บาท',\n          '2006': 'อันละ 2,800 บาท',\n          '2007': 'อันละ 700 บาท',\n          '8201': 'ข้างละ 11,000 บาท',\n          '8221': 'ข้างละ 6,000 บาท',\n          '8205': 'ข้างละ 26,000 บาท',\n        };\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            if (row.includes(undefined) == true) {\n\n              newRows.push({\n                key: index,\n                // ICD_10: <Text type=\"danger\">{row[0]}</Text>,\n                // ICD_9: <Text type=\"danger\">{row[1]}</Text>,\n                // g1: <Text type=\"danger\">{row[2]}</Text>,\n                // g2: <Text type=\"danger\">{row[3]}</Text>,\n                // g3: <Text type=\"danger\">{dict[row[2]]}</Text>\n                // g3: dict[row[3]]\n                ICD_10: row[0],\n                ICD_9: row[1],\n                g1: row[2],\n                g2: row[3],\n                g3: undefined\n              });\n            }\n            if (row.includes(undefined) == false) {\n\n              newRows.push({\n                key: index,\n                ICD_10: row[0],\n                ICD_9: row[1],\n                g1: row[2],\n                g2: row[3],\n                g3: dict[row[2]]\n              });\n            }\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n  handleSubmit = async () => {\n    // console.log(\"submitting: \", this.state.rows);\n    const data = this.state.rows ? this.state.rows : '';//tabular data\n    var option = {};\n    let dataTable = [];\n    let datas = []\n    if (data) {\n\n      data.map((row) => {\n        datas.push(\n          row['g3']\n        )\n        let obj = {\n          'ICD-10': row['ICD_10'],\n          'ICD-9': row['ICD_9'],\n          'รหัสกรมบัญชีกลาง.': row['g1'],\n          'อุปกรณ์': row['g2'],\n          'อัตราจ่าย': row['g3'],\n        }\n        dataTable.push(obj);\n      });\n      // for (let i in data) {\n      //   if(data){\n      //     let obj = {\n      //                  'Organization ID': data[i].id,\n      //                  'Organization code': data[i].organization_code,\n      //                  'Organization name': data[i].organization_name,\n      //     }\n      //     dataTable.push(obj);\n      //   }\n      // }\n    }\n    option.fileName = this.state.name;\n    option.datas = [\n      {\n        sheetData: dataTable,\n        sheetName: 'sheet',\n        sheetFilter: ['ICD-10', 'ICD-9', 'รหัสกรมบัญชีกลาง.', 'อุปกรณ์', 'อัตราจ่าย'],\n        sheetHeader: ['ICD-10', 'ICD-9', 'รหัสกรมบัญชีกลาง.', 'อุปกรณ์', 'อัตราจ่าย'],\n      }\n    ];\n\n    if (!datas.includes(undefined) && datas.length !== 0) {\n      var toExcel = new ExportJsonExcel(option);\n      toExcel.saveExcel();\n    } else {\n      this.error()\n    }\n\n    // this.state.rows.map((row) => {\n    //   console.log(row['g1'])\n    // });\n    //submit to API\n    //if successful, banigate and clear the data\n    //this.setState({ rows: [] })\n  };\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n\n  logout = () => {\n    window.location = '/'\n  }\n  handleAdd = () => {\n    const { count, rows } = this.state;\n    const newData = {\n      key: count,\n      name: \"User's name\",\n      age: \"22\",\n      gender: \"Female\"\n    };\n    this.setState({\n      rows: [newData, ...rows],\n      count: count + 1\n    });\n  };\n\n  render() {\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <div style={{ paddingTop: 20, paddingLeft: 20, paddingRight: 20 }}>\n        <div style={{ textAlign: 'end' }}>\n          <Button\n            onClick={this.logout}\n            size=\"large\"\n            type=\"danger\"\n          // style={{ marginBottom: 16, marginLeft: 10 }}\n          >\n            ออกจากระบบ\n                  <Icon type=\"arrow-right\" />\n          </Button>\n        </div>\n        <Row gutter={24}>\n          <Col\n            span={8}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"2%\"\n            }}\n          >\n            <Upload\n              name=\"file\"\n              beforeUpload={this.fileHandler}\n              onRemove={() => this.setState({ rows: [] })}\n              multiple={false}\n            >\n              <Button>\n                <Icon type=\"upload\" /> นำเข้าไฟล์ Excel\n            </Button>\n            </Upload>\n\n          </Col>\n          <Col span={8}>\n            {this.state.rows.length > 0 && (\n              <>\n                <Button type=\"primary\" shape=\"round\" size='large'\n                onClick={this.handleSubmit}\n                >\n                  <Icon type=\"download\" />\n          ส่งออกไฟล์ Excel\n        </Button>\n              </>\n            )}\n          </Col>\n\n        </Row>\n        {/* <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n              <Icon type=\"upload\" /> นำเข้าไฟล์ Excel\n            </Button>\n          </Upload>\n\n          <Button\n            onClick={this.handleSubmit}\n            size=\"large\"\n            type=\"primary\"\n            style={{ marginBottom: 16, marginLeft: 10 }}\n          >\n            Submit Data\n                </Button>\n          <Button\n            onClick={this.logout}\n            size=\"large\"\n            type=\"primary\"\n            style={{ marginBottom: 16, marginLeft: 10 }}\n          >\n            ออกจากระบบ\n                </Button>\n        </div> */}\n        <div style={{ marginTop: 20 }}>\n          <Table\n            bordered\n            pagination={false}\n            components={components}\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\utils\\editable.js",[],["45","46"],"C:\\Users\\PHATTARAPHON\\Desktop\\work\\readeditexcel\\src\\components\\login.js",["47","48","49","50","51","52","53","54","55","56","57","58"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Row, message, Table, Popconfirm, Col, Icon, Upload, Typography, Space } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './login.css';\r\nimport ExcelPage from \"./excelPage\";\r\nimport { ExcelRenderer } from \"react-excel-renderer\";\r\nimport { EditableFormRow, EditableCell } from \"../utils/editable\";\r\nimport ExportJsonExcel from 'js-export-excel';\r\n\r\nconst { Text } = Typography;\r\nexport default class login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            user1: '',\r\n            password1: '',\r\n            cols: [],\r\n            rows: [],\r\n            name: null,\r\n            errorMessage: null,\r\n            columns: [\r\n                {\r\n                    title: \"ICD-10\",\r\n                    dataIndex: \"ICD_10\",\r\n                    editable: true,\r\n                    render: text => text\r\n                },\r\n                {\r\n                    title: \"ICD-9\",\r\n                    dataIndex: \"ICD_9\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"รหัสกรมบัญชีกลาง.\",\r\n                    dataIndex: \"g1\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"อุปกรณ์\",\r\n                    dataIndex: \"g2\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"อัตราจ่าย\",\r\n                    dataIndex: \"g3\",\r\n                    editable: true\r\n                },\r\n                // {\r\n                //   title: \"Action\",\r\n                //   dataIndex: \"action\",\r\n                //   render: (text, record) =>\r\n                //     this.state.rows.length >= 1 ? (\r\n                //       <Popconfirm\r\n                //         title=\"Sure to delete?\"\r\n                //         onConfirm={() => this.handleDelete(record.key)}\r\n                //       >\r\n                //         <Icon\r\n                //           type=\"delete\"\r\n                //           theme=\"filled\"\r\n                //           style={{ color: \"red\", fontSize: \"20px\" }}\r\n                //         />\r\n                //       </Popconfirm>\r\n                //     ) : null\r\n                // }\r\n            ]\r\n        };\r\n\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n        this.handleChange2 = this.handleChange2.bind(this);\r\n        this.handleSubmit1 = this.handleSubmit1.bind(this);\r\n        this.router = undefined;\r\n    }\r\n    handleChange1(event) {\r\n        this.setState({ user: event.target.value });\r\n    }\r\n    handleChange2(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleSubmit1() {\r\n        if (this.state.user == 'admin' && this.state.password == \"1234\") {\r\n            this.setState({ user1: this.state.user });\r\n            this.setState({ password1: this.state.password })\r\n            //    window.history.pushState('', '', './home'); \r\n            // window.location = '/home'\r\n        } else {\r\n            message.error('ชื่อผู้ใช้ หรือ รหัสผ่านไม่ถูกต้อง');\r\n        }\r\n\r\n        // alert('A name was submitted: ' + this.state.user + \"  \" + this.state.password);\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    error = () => {\r\n        message.error('ข้อมูลยังไม่ครบ');\r\n    };\r\n\r\n    handleSave = row => {\r\n        var dict = {\r\n            '2505': \"เครื่องละ 9,000 บาท\",\r\n            '2507': 'ข้างละ 12,000 บาท',\r\n            '2508': 'ข้างละ 12,500 บาท',\r\n            '8101': 'ข้างละ 36,500 บาท',\r\n            '8105': 'ข้างละ 48,000 บาท',\r\n            '8106': 'ข้างละ 38,000 บาท',\r\n            '8202': 'ข้างละ 6,000 บาท',\r\n            '8203': 'ข้างละ 12,000 บาท',\r\n            '8206': 'ข้างละ 28,000 บาท',\r\n            '8801': 'คู่ละ 800 บาท',\r\n            '8802': 'คู่ละ 1,000 บาท',\r\n            '8803': 'คู่ละ 1,200 บาท',\r\n            '8804': 'คู่ละ 1,400 บาท',\r\n            '2006': 'อันละ 2,800 บาท',\r\n            '2007': 'อันละ 700 บาท',\r\n            '8201': 'ข้างละ 11,000 บาท',\r\n            '8221': 'ข้างละ 6,000 บาท',\r\n            '8205': 'ข้างละ 26,000 บาท',\r\n        };\r\n        const newData = [...this.state.rows];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        // console.log(item.includes(undefined))\r\n        this.setState({ rows: newData });\r\n        if (newData[index]['ICD_10'] && newData[index]['ICD_9'] && newData[index]['g1'] && newData[index]['g2'] !== undefined) {\r\n            let temporaryarray = newData.slice();\r\n            temporaryarray[index]['g3'] = dict[newData[index]['g1']];\r\n            this.setState(temporaryarray);\r\n        }\r\n    };\r\n\r\n    checkFile(file) {\r\n        let errorMessage = \"\";\r\n        if (!file || !file[0]) {\r\n            return;\r\n        }\r\n        const isExcel =\r\n            file[0].type === \"application/vnd.ms-excel\" ||\r\n            file[0].type ===\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n        if (!isExcel) {\r\n            errorMessage = \"You can only upload Excel file!\";\r\n        }\r\n        console.log(\"file\", file[0].type);\r\n        const isLt2M = file[0].size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            errorMessage = \"File must be smaller than 2MB!\";\r\n        }\r\n        console.log(\"errorMessage\", errorMessage);\r\n        return errorMessage;\r\n    }\r\n\r\n    fileHandler = fileList => {\r\n        // console.log(\"fileList\", fileList);\r\n        this.setState({ name: fileList.name.split(\".\")[0] });\r\n        let fileObj = fileList;\r\n        if (!fileObj) {\r\n            this.setState({\r\n                errorMessage: \"No file uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        console.log(\"fileObj.type:\", fileObj.type);\r\n        if (\r\n            !(\r\n                fileObj.type === \"application/vnd.ms-excel\" ||\r\n                fileObj.type ===\r\n                \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n            )\r\n        ) {\r\n            this.setState({\r\n                errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let newRows = [];\r\n                var dict = {\r\n                    '2505': \"เครื่องละ 9,000 บาท\",\r\n                    '2507': 'ข้างละ 12,000 บาท',\r\n                    '2508': 'ข้างละ 12,500 บาท',\r\n                    '8101': 'ข้างละ 36,500 บาท',\r\n                    '8105': 'ข้างละ 48,000 บาท',\r\n                    '8106': 'ข้างละ 38,000 บาท',\r\n                    '8202': 'ข้างละ 6,000 บาท',\r\n                    '8203': 'ข้างละ 12,000 บาท',\r\n                    '8206': 'ข้างละ 28,000 บาท',\r\n                    '8801': 'คู่ละ 800 บาท',\r\n                    '8802': 'คู่ละ 1,000 บาท',\r\n                    '8803': 'คู่ละ 1,200 บาท',\r\n                    '8804': 'คู่ละ 1,400 บาท',\r\n                    '2006': 'อันละ 2,800 บาท',\r\n                    '2007': 'อันละ 700 บาท',\r\n                    '8201': 'ข้างละ 11,000 บาท',\r\n                    '8221': 'ข้างละ 6,000 บาท',\r\n                    '8205': 'ข้างละ 26,000 บาท',\r\n                };\r\n                resp.rows.slice(1).map((row, index) => {\r\n                    if (row && row !== \"undefined\") {\r\n                        if (row.includes(undefined) == true) {\r\n\r\n                            newRows.push({\r\n                                key: index,\r\n                                // ICD_10: <Text type=\"danger\">{row[0]}</Text>,\r\n                                // ICD_9: <Text type=\"danger\">{row[1]}</Text>,\r\n                                // g1: <Text type=\"danger\">{row[2]}</Text>,\r\n                                // g2: <Text type=\"danger\">{row[3]}</Text>,\r\n                                // g3: <Text type=\"danger\">{dict[row[2]]}</Text>\r\n                                // g3: dict[row[3]]\r\n                                ICD_10: row[0],\r\n                                ICD_9: row[1],\r\n                                g1: row[2],\r\n                                g2: row[3],\r\n                                g3: undefined\r\n                            });\r\n                        }\r\n                        if (row.includes(undefined) == false) {\r\n\r\n                            newRows.push({\r\n                                key: index,\r\n                                ICD_10: row[0],\r\n                                ICD_9: row[1],\r\n                                g1: row[2],\r\n                                g2: row[3],\r\n                                g3: dict[row[2]]\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n                if (newRows.length === 0) {\r\n                    this.setState({\r\n                        errorMessage: \"No data found in file!\"\r\n                    });\r\n                    return false;\r\n                } else {\r\n                    this.setState({\r\n                        cols: resp.cols,\r\n                        rows: newRows,\r\n                        errorMessage: null\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return false;\r\n    };\r\n\r\n    handleSubmit = async () => {\r\n        // console.log(\"submitting: \", this.state.rows);\r\n        const data = this.state.rows ? this.state.rows : '';//tabular data\r\n        var option = {};\r\n        let dataTable = [];\r\n        let datas = []\r\n        if (data) {\r\n\r\n            data.map((row) => {\r\n                datas.push(\r\n                    row['g3']\r\n                )\r\n                let obj = {\r\n                    'ICD-10': row['ICD_10'],\r\n                    'ICD-9': row['ICD_9'],\r\n                    'รหัสกรมบัญชีกลาง.': row['g1'],\r\n                    'อุปกรณ์': row['g2'],\r\n                    'อัตราจ่าย': row['g3'],\r\n                }\r\n                dataTable.push(obj);\r\n            });\r\n            // for (let i in data) {\r\n            //   if(data){\r\n            //     let obj = {\r\n            //                  'Organization ID': data[i].id,\r\n            //                  'Organization code': data[i].organization_code,\r\n            //                  'Organization name': data[i].organization_name,\r\n            //     }\r\n            //     dataTable.push(obj);\r\n            //   }\r\n            // }\r\n        }\r\n        option.fileName = this.state.name;\r\n        option.datas = [\r\n            {\r\n                sheetData: dataTable,\r\n                sheetName: 'sheet',\r\n                sheetFilter: ['ICD-10', 'ICD-9', 'รหัสกรมบัญชีกลาง.', 'อุปกรณ์', 'อัตราจ่าย'],\r\n                sheetHeader: ['ICD-10', 'ICD-9', 'รหัสกรมบัญชีกลาง.', 'อุปกรณ์', 'อัตราจ่าย'],\r\n            }\r\n        ];\r\n\r\n        if (!datas.includes(undefined) && datas.length !== 0) {\r\n            var toExcel = new ExportJsonExcel(option);\r\n            toExcel.saveExcel();\r\n        } else {\r\n            this.error()\r\n        }\r\n\r\n        // this.state.rows.map((row) => {\r\n        //   console.log(row['g1'])\r\n        // });\r\n        //submit to API\r\n        //if successful, banigate and clear the data\r\n        //this.setState({ rows: [] })\r\n    };\r\n\r\n    handleDelete = key => {\r\n        const rows = [...this.state.rows];\r\n        this.setState({ rows: rows.filter(item => item.key !== key) });\r\n    };\r\n\r\n    logout = () => {\r\n        this.setState({password1:\"\"})\r\n        this.setState({user1:\"\"})\r\n        this.setState({password:\"\"})\r\n        this.setState({user:\"\"})\r\n    }\r\n    handleAdd = () => {\r\n        const { count, rows } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: \"User's name\",\r\n            age: \"22\",\r\n            gender: \"Female\"\r\n        };\r\n        this.setState({\r\n            rows: [newData, ...rows],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.state.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n\r\n            this.state.user1 == 'admin' && this.state.password1 == \"1234\" ? <div style={{ paddingTop: 20, paddingLeft: 20, paddingRight: 20 }}>\r\n                <div style={{ textAlign: 'end' }}>\r\n                    <Button\r\n                        onClick={this.logout}\r\n                        size=\"large\"\r\n                        type=\"danger\"\r\n                    // style={{ marginBottom: 16, marginLeft: 10 }}\r\n                    >\r\n                        ออกจากระบบ\r\n                      <Icon type=\"arrow-right\" />\r\n                    </Button>\r\n                </div>\r\n                <Row gutter={24}>\r\n                    <Col\r\n                        span={8}\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            marginBottom: \"2%\"\r\n                        }}\r\n                    >\r\n                        <Upload\r\n                            name=\"file\"\r\n                            beforeUpload={this.fileHandler}\r\n                            onRemove={() => this.setState({ rows: [] })}\r\n                            multiple={false}\r\n                        >\r\n                            <Button>\r\n                                <Icon type=\"upload\" /> นำเข้าไฟล์ Excel\r\n                </Button>\r\n                        </Upload>\r\n\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        {this.state.rows.length > 0 && (\r\n                            <>\r\n                                <Button type=\"primary\" shape=\"round\" size='large'\r\n                                    onClick={this.handleSubmit}\r\n                                >\r\n                                    <Icon type=\"download\" />\r\n              ส่งออกไฟล์ Excel\r\n            </Button>\r\n                            </>\r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>\r\n                {/* <div>\r\n              <Upload\r\n                name=\"file\"\r\n                beforeUpload={this.fileHandler}\r\n                onRemove={() => this.setState({ rows: [] })}\r\n                multiple={false}\r\n              >\r\n                <Button>\r\n                  <Icon type=\"upload\" /> นำเข้าไฟล์ Excel\r\n                </Button>\r\n              </Upload>\r\n    \r\n              <Button\r\n                onClick={this.handleSubmit}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16, marginLeft: 10 }}\r\n              >\r\n                Submit Data\r\n                    </Button>\r\n              <Button\r\n                onClick={this.logout}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16, marginLeft: 10 }}\r\n              >\r\n                ออกจากระบบ\r\n                    </Button>\r\n            </div> */}\r\n                <div style={{ marginTop: 20 }}>\r\n                    <Table\r\n                        bordered\r\n                        pagination={false}\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={this.state.rows}\r\n                        columns={columns}\r\n                    />\r\n                </div>\r\n            </div> :\r\n                <div>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ paddingTop: \"15%\" }} >\r\n                        <h1>เข้าสู่ระบบ</h1>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" >\r\n\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your Username!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"ชื่อผู้ใช้\" value={this.state.user} onChange={this.handleChange1} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your Password!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                {/* <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            /> */}\r\n\r\n                                <Input.Password\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                    value={this.state.password} onChange={this.handleChange2}\r\n                                    placeholder=\"รหัสผ่าน\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit1}>\r\n                                    ยืนยัน\r\n        </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Row>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"59","severity":1,"message":"60","line":21,"column":10,"nodeType":"61","messageId":"62","endLine":21,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":21,"column":21,"nodeType":"61","messageId":"62","endLine":21,"endColumn":34},{"ruleId":"59","severity":1,"message":"64","line":22,"column":8,"nodeType":"61","messageId":"62","endLine":22,"endColumn":17},{"ruleId":"59","severity":1,"message":"65","line":47,"column":7,"nodeType":"61","messageId":"62","endLine":47,"endColumn":18},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"59","severity":1,"message":"70","line":2,"column":25,"nodeType":"61","messageId":"62","endLine":2,"endColumn":35},{"ruleId":"59","severity":1,"message":"71","line":2,"column":73,"nodeType":"61","messageId":"62","endLine":2,"endColumn":78},{"ruleId":"59","severity":1,"message":"72","line":6,"column":9,"nodeType":"61","messageId":"62","endLine":6,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":174,"column":45,"nodeType":"75","messageId":"76","endLine":174,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":176,"column":41,"nodeType":"79","messageId":"80","endLine":176,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":193,"column":41,"nodeType":"79","messageId":"80","endLine":193,"endColumn":43},{"ruleId":"73","severity":1,"message":"74","line":231,"column":22,"nodeType":"75","messageId":"76","endLine":231,"endColumn":24},{"ruleId":"66","replacedBy":"81"},{"ruleId":"68","replacedBy":"82"},{"ruleId":"59","severity":1,"message":"70","line":2,"column":52,"nodeType":"61","messageId":"62","endLine":2,"endColumn":62},{"ruleId":"59","severity":1,"message":"71","line":2,"column":95,"nodeType":"61","messageId":"62","endLine":2,"endColumn":100},{"ruleId":"59","severity":1,"message":"64","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":17},{"ruleId":"59","severity":1,"message":"72","line":10,"column":9,"nodeType":"61","messageId":"62","endLine":10,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":84,"column":29,"nodeType":"79","messageId":"80","endLine":84,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":84,"column":63,"nodeType":"79","messageId":"80","endLine":84,"endColumn":65},{"ruleId":"73","severity":1,"message":"74","line":210,"column":53,"nodeType":"75","messageId":"76","endLine":210,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":212,"column":53,"nodeType":"79","messageId":"80","endLine":212,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":229,"column":53,"nodeType":"79","messageId":"80","endLine":229,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":267,"column":28,"nodeType":"75","messageId":"76","endLine":267,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":366,"column":30,"nodeType":"79","messageId":"80","endLine":366,"endColumn":32},{"ruleId":"77","severity":1,"message":"78","line":366,"column":65,"nodeType":"79","messageId":"80","endLine":366,"endColumn":67},"no-unused-vars","'useRoutes' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'ExcelPage' is defined but never used.","'rootElement' is assigned a value but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'Popconfirm' is defined but never used.","'Space' is defined but never used.","'Text' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["83"],["84"],"no-global-assign","no-unsafe-negation"]